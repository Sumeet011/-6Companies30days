Question : Find Subsequence of Length K With the Largest Sum

Description : You are given an integer array nums and an integer k. You want to find a subsequence of nums of length k that has the largest sum.
Return any such subsequence as an integer array of length k.
A subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.

Solution : 
class Solution {
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        unordered_map<int, int> M;
        vector<int> P = nums;
        sort(P.begin(), P.end());
        int j = nums.size() - 1;
        while (j >= 0 && k > 0) {

            M[P[j]]++;
            k--;
            j--;
        }
        vector<int> ANS;
        for (int a : nums) {
            if (M.find(a) != M.end() && M[a] > 0) {
                ANS.push_back(a);
                M[a]--;
            }
        }
        return ANS;
    }
};
