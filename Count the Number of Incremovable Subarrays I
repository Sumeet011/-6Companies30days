Question : Count the Number of Incremovable Subarrays I
Difficulty : Easy

You are given a 0-indexed array of positive integers nums.
A subarray of nums is called incremovable if nums becomes strictly increasing on removing the subarray.
For example, the subarray [3, 4] is an incremovable subarray of [5, 3, 4, 6, 7] because removing this subarray changes the array [5, 3, 4, 6, 7] to [5, 6, 7] which is strictly increasing.
Return the total number of incremovable subarrays of nums.
Note that an empty array is considered strictly increasing.
A subarray is a contiguous non-empty sequence of elements within an array.

Solution : 
class Solution {
public:
    int incremovableSubarrayCount(vector<int>& nums) {
    int ans = 0;
    for(int i = 0; i < nums.size(); ++i){
        for(int j = i; j < nums.size(); ++j){
            int last = -1, flag = 1;
            for(int k = 0; k < nums.size(); ++k){
                if(k >= i && k <= j) continue;
                if(last >= nums[k]){ flag = 0; break; }
                last = nums[k];
            }
            if(flag) ans++;
        }
    }
    return ans;
}
};
