Question : Top K Frequent Words

Description : Given an array of strings words and an integer k, return the k most frequent strings.
Return the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.

SOlution : class Solution {
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<std::string, int> freqMap;
        for (const auto& word : words) {
            freqMap[word]++;
        }

        // Step 2: Store frequencies in a vector of pairs
        std::vector<std::pair<int, std::string>> freqVec;
        for (const auto& entry : freqMap) {
            freqVec.push_back({entry.second, entry.first});
        }

        // Step 3: Sort the vector
        std::sort(
            freqVec.begin(), freqVec.end(), [](const auto& a, const auto& b) {
                // Sort by frequency in descending order, then lexicographically
                if (a.first == b.first) {
                    return a.second <
                           b.second; // Lexicographical order for same frequency
                }
                return a.first > b.first; // Higher frequency first
            });

        // Step 4: Extract the top k strings
        std::vector<std::string> result;
        for (int i = 0; i < k; ++i) {
            result.push_back(freqVec[i].second);
        }

        return result;
    }
};
