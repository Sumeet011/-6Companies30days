Question : Get Equal Substrings Within Budget

You are given two strings s and t of the same length and an integer maxCost.
You want to change s to t. Changing the ith character of s to ith character of t costs |s[i] - t[i]| (i.e., the absolute difference between the ASCII values of the characters).
Return the maximum length of a substring of s that can be changed to be the same as the corresponding substring of t with a cost less than or equal to maxCost.
If there is no substring from s that can be changed to its corresponding substring from t, return 0.

Solution : 
class Solution {
public:
    int equalSubstring(string s, string t, int maxCost) {
        int ans = 0;
        int L = 0;
        int R = 0;
        int c = 0;

        while (R < s.length()) {
            c += abs(s[R] - t[R]);
            if (c <= maxCost) {
                ans = max(ans, R - L + 1);
            }
            while (L <= R && c > maxCost) {
                c -= abs(s[L] - t[L]);
                L++;
            }
            R++;
        }

        return ans;
    }
};


 
