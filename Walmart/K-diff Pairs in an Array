Question : K-diff Pairs in an Array

Descrption : Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.
A k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:
0 <= i, j < nums.length
i != j
|nums[i] - nums[j]| == k
Notice that |val| denotes the absolute value of val.

Solution : class Solution {
public:
    int findPairs(std::vector<int>& arr, int k) {
        unordered_map<int, int> m;
        set<std::pair<int, int>> uniquePairs; // To store unique pairs

        for (int i = 0; i < arr.size(); i++) {
            if (m.find(arr[i] - k) != m.end()) {
                uniquePairs.insert({std::min(arr[i], arr[i] - k), std::max(arr[i], arr[i] - k)});
            }
            if (m.find(arr[i] + k) != m.end()) {
                uniquePairs.insert({std::min(arr[i], arr[i] + k), std::max(arr[i], arr[i] + k)});
            }
            m[arr[i]]++;
        }

        return uniquePairs.size();
    }
};
